name: React Native Android CI

on:
  push:
    branches:
      - main

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install  

      - name: Install Java and Gradle
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Install Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: gradle-${{ runner.os }}-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-  

      - name: Grant execute permission to Gradle
        run: chmod +x android/gradlew

      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/app-release.apk

  
  build-ios:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install  

      - name: Setup Ruby for CocoaPods
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0

      - name: Install CocoaPods
        run: |
          cd ios
          pod install || exit 1

      - name: Cache Pods
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: pods-${{ runner.os }}-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: pods-${{ runner.os }}-

      - name: Verify xcworkspace exists
        run: ls -la ios/

      - name: Verify exportOptions.plist exists
        run: ls -la ios/exportOptions.plist

      - name: Build iOS Archive
        run: |
          xcodebuild -workspace ios/CICD_CLI_Demo.xcworkspace \
          -scheme CICD_CLI_Demo \
          -sdk iphoneos \
          -configuration Release \
          -archivePath ios/build/CICD_CLI_Demo.xcarchive \
          archive

      - name: Check exportOptions.plist
        run: |
          if [ ! -f ios/exportOptions.plist ]; then
            echo "exportOptions.plist not found!"
            exit 1
          fi

      - name: Export .ipa
        run: |
          xcodebuild -exportArchive \
          -archivePath ios/build/CICD_CLI_Demo.xcarchive \
          -exportOptionsPlist ios/exportOptions.plist \
          -exportPath ios/build    
      
      - name: Verify .ipa Exists
        run: |
          if [ ! -f ios/build/CICD_CLI_Demo.ipa ]; then
            echo "iOS IPA file is missing!"
            exit 1
          fi

      - name: Upload iOS IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: ios/build/CICD_CLI_Demo.ipa