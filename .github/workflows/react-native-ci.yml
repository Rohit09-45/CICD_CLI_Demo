name: React Native Android CI

on:
  push:
    branches:
      - main

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install  

      - name: Install Java and Gradle
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Install Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: gradle-${{ runner.os }}-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-  

      - name: Grant execute permission to Gradle
        run: chmod +x android/gradlew

      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/app-release.apk

  
  build-ios:
    runs-on: macos-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          npm install
          cd ios && pod install && cd ..

      - name: Authenticate with Apple
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APP_SPECIFIC_PASSWORD: ${{ secrets.APP_SPECIFIC_PASSWORD }}
        run: |
          fastlane run update_fastlane
          fastlane sigh resign --team_id $APPLE_TEAM_ID

      - name: Set Up Xcode Managed Profile
        run: |
          xcodebuild clean build \
            -workspace ios/CICD_CLI_Demo.xcworkspace \
            -scheme CICD_CLI_Demo \
            CODE_SIGN_STYLE=Automatic \
            -allowProvisioningUpdates

      - name: Build iOS App
        run: |
          xcodebuild archive \
            -workspace ios/CICD_CLI_Demo.xcworkspace \
            -scheme CICD_CLI_Demo \
            -archivePath $PWD/build/CICD_CLI_Demo.xcarchive \
            CODE_SIGN_IDENTITY="Apple Development" \
            -allowProvisioningUpdates